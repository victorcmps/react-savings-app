{"version":3,"sources":["assets/images/logo.svg","components/Menu/Menu.style.tsx","components/Menu/Menu.tsx","assets/icons/dollar-sign.svg","utils/date.ts","utils/input.ts","components/Amount/Amount.style.tsx","components/Amount/Amount.tsx","assets/icons/chevron-left.svg","assets/icons/chevron-right.svg","components/ReachDate/ReachDate.style.tsx","components/ReachDate/ReachDate.tsx","components/MonthlyAmount/MonthlyAmount.style.tsx","components/MonthlyAmount/MonthlyAmount.tsx","assets/icons/buy-a-house.svg","components/Button/Button.style.tsx","components/Card/Card.style.tsx","pages/SavingsGoalSimulator.style.tsx","components/Card/Card.tsx","components/Button/Button.tsx","pages/SavingsGoalSimulator.tsx","styles.ts","theme.tsx","shared/tokens/color.ts","shared/tokens/font-family.ts","App.tsx","index.tsx"],"names":["Navbar","styled","div","props","theme","color","neutralWhite","Logo","img","Menu","width","height","src","logo","alt","formatMonth","date","toLocaleString","month","getNextOrPrevDate","isPreviousMonth","maxMonth","getMonth","Date","getFullYear","formatCurrency","value","currency","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","decimal","split","length","checkDecimal","AmountWrapper","label","Label","blueGray900","InputWrapper","span","Icon","Input","input","blueGray50","font","rubik","blueGray600","Amount","htmlFor","aria-hidden","dollarIcon","onChange","event","valueFormatted","target","replace","onAmountChange","Number","handleOnInput","inputMode","id","name","amount","StyledReachDate","Wrapper","ButtonIcon","Button","DateWrapper","Month","p","Year","blueGray400","ReachDate","isPreviousDisabled","toString","data-testid","onKeyDown","key","onMonthChange","handleKeyPress","tabIndex","onClick","data-disabled","chevronLeft","aria-atomic","aria-relevant","aria-live","chevronRight","StyledMonthlyAmount","AmountInfo","Title","h3","brandColorSecondary","AmountDetail","blueGray10","AmountDetailText","MonthlyAmount","monthlyAmount","monthCounter","ButtonStyle","button","brandColorPrimary","CardStyle","section","h1","CardSimulator","className","children","CardTitleWrapper","CardTitle","h2","CardSubtitle","Form","form","FormButton","SavingsGoalSimulator","useState","setDate","setMonthCounter","setAmount","calcMonthlyAmount","useMemo","buyAHouseIcon","GlobalStyle","createGlobalStyle","workSans","defaultTheme","blueGray300","blueGray100","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e389b01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.14023c19.svg\";","import styled from 'styled-components';\r\n\r\nexport const Navbar = styled.div`\r\n  padding: 16px;\r\n  background-color: ${(props) => props.theme.color.neutralWhite};\r\n  margin-bottom: 32px;\r\n  height: 56px;\r\n\r\n  @media (min-width: 992px) {\r\n    padding: 24px 56px;\r\n    margin-bottom: 48px;\r\n    height: 80px;\r\n  }\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  @media (min-width: 992px) {\r\n    width: 100px;\r\n    height: 32px;\r\n  } ;\r\n`;\r\n","import { ReactElement } from 'react';\r\nimport logo from '../../assets/images/logo.svg';\r\nimport * as SC from './Menu.style';\r\n\r\nexport function Menu(): ReactElement {\r\n  return (\r\n    <SC.Navbar>\r\n      <SC.Logo width={75} height={24} src={logo} alt=\"Origin Logo\" />\r\n    </SC.Navbar>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/dollar-sign.abb7953b.svg\";","/**\r\n * Get the full month name of a date.\r\n * @param {Date} date - The date\r\n * @returns {string} Returns the name\r\n */\r\nexport function formatMonth(date: Date): string {\r\n  return date.toLocaleString('en-US', { month: 'long' });\r\n}\r\n\r\n/**\r\n * Get the next or the previous month of a date.\r\n * @param {Date} date - The date\r\n * @param {boolean} isPreviousMonth - Tells the method whether to look for the previous date\r\n * @returns {string} Returns the full date\r\n */\r\nexport function getNextOrPrevDate(date: Date, isPreviousMonth: boolean): Date {\r\n  /**  Verify if date reached December or January (if clicked on previous) to advance to January or get back to December respectively */\r\n  const maxMonth = isPreviousMonth ? 0 : 11;\r\n  if (date.getMonth() === maxMonth) {\r\n    return isPreviousMonth\r\n      ? new Date(date.getFullYear() - 1, 11, 1)\r\n      : new Date(date.getFullYear() + 1, 0, 1);\r\n  }\r\n  return new Date(\r\n    date.getFullYear(),\r\n    isPreviousMonth ? date.getMonth() - 1 : date.getMonth() + 1,\r\n    1\r\n  );\r\n}\r\n","/**\r\n * Remove characters and punctuation from given string\r\n * @param {number} value - The number\r\n * @returns {string} Returns formatted value with only numbers\r\n */\r\nexport function formatOnlyNumbers(value: string): string {\r\n  const regex = /[^0-9]/g;\r\n  return value.replace(regex, '');\r\n}\r\n\r\n/**\r\n * Format a number to US Currency\r\n * @param {number} value - The number\r\n * @returns {string} Returns formatted value\r\n */\r\nexport function formatCurrency(value: number): string {\r\n  const dollarLocale = Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 2,\r\n    currency: 'USD',\r\n  });\r\n  const currency = dollarLocale.format(value);\r\n  const formattedValue = checkDecimal(currency) ? currency + '0' : currency;\r\n  return formattedValue;\r\n}\r\n\r\n/**\r\n * Given a number, verifies if the decimal has less than 2 numbers.\r\n * @param {string} value - The number\r\n * @returns {boolean} Return ´true´ if decimal has less than 2 numbers, and ´false´ otherwise.\r\n */\r\nfunction checkDecimal(value: string): boolean {\r\n  const decimal = value.split('.')[1];\r\n  return decimal && decimal.length < 2 ? true : false;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const AmountWrapper = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 150%;\r\n  color: ${(props) => props.theme.color.blueGray900};\r\n  margin-bottom: 4px;\r\n\r\n  @media (min-width: 992px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.span`\r\n  position: relative;\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n  position: absolute;\r\n  top: 50%;\r\n  translate: 0% -50%;\r\n  margin-left: 12px;\r\n  pointer-events: none;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  border: 1px solid ${(props) => props.theme.color.blueGray50};\r\n  padding-left: 44px;\r\n  padding-right: 12px;\r\n  font-family: ${(props) => props.theme.font.rubik};\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 120%;\r\n  height: 56px;\r\n  border-radius: 4px;\r\n  color: ${(props) => props.theme.color.blueGray600};\r\n  width: 100%;\r\n\r\n  @media (min-width: 992px) {\r\n    width: 272px;\r\n    font-size: 24px;\r\n  }\r\n`;\r\n","import { FormEvent, ReactElement } from 'react';\r\nimport dollarIcon from '../../assets/icons/dollar-sign.svg';\r\nimport { formatCurrency, formatOnlyNumbers } from '../../utils';\r\nimport * as SC from './Amount.style';\r\n\r\ntype AmountProps = {\r\n  amount: number;\r\n  onAmountChange: (amount: number) => void;\r\n};\r\n\r\nexport function Amount(props: AmountProps): ReactElement {\r\n  const handleOnInput = (event: FormEvent<HTMLInputElement>): void => {\r\n    const valueFormatted = formatOnlyNumbers(\r\n      (event.target as HTMLInputElement).value\r\n    );\r\n    props.onAmountChange(Number(valueFormatted));\r\n  };\r\n\r\n  return (\r\n    <SC.AmountWrapper>\r\n      <SC.Label htmlFor=\"amount\">Total amount</SC.Label>\r\n      <SC.InputWrapper>\r\n        <SC.Icon aria-hidden src={dollarIcon} />\r\n        <SC.Input\r\n          onChange={(event) => {\r\n            handleOnInput(event);\r\n          }}\r\n          inputMode=\"numeric\"\r\n          id=\"amount\"\r\n          name=\"savingsGoal\"\r\n          value={formatCurrency(props.amount)}\r\n        />\r\n      </SC.InputWrapper>\r\n    </SC.AmountWrapper>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/chevron-left.4e4bfb11.svg\";","export default __webpack_public_path__ + \"static/media/chevron-right.a042edbb.svg\";","import styled from 'styled-components';\r\n\r\nexport const StyledReachDate = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  -webkit-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 150%;\r\n  color: ${(props) => props.theme.color.blueGray900};\r\n  margin-bottom: 4px;\r\n\r\n  @media (min-width: 992px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: 1px solid ${(props) => props.theme.color.blueGray50};\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n  line-height: 120%;\r\n  height: 56px;\r\n  border-radius: 4px;\r\n  color: ${(props) => props.theme.color.blueGray600};\r\n  width: 100%;\r\n\r\n  @media (min-width: 992px) {\r\n    width: 192px;\r\n  }\r\n`;\r\n\r\nexport const ButtonIcon = styled.img`\r\n  width: 24px;\r\n  height: 24px;\r\n`;\r\n\r\nexport const Button = styled.span`\r\n  background: white;\r\n  border: 0;\r\n  padding: 0 12px;\r\n  cursor: pointer;\r\n  height: 100%;\r\n  display: flex;\r\n  place-items: center;\r\n\r\n  &[data-disabled='true'] {\r\n    pointer-events: none;\r\n    ${ButtonIcon} {\r\n      opacity: 0.2;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DateWrapper = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 150%;\r\n  text-align: center;\r\n  @media (min-width: 992px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const Month = styled.p`\r\n  color: ${(props) => props.theme.color.blueGray900};\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Year = styled.p`\r\n  color: ${(props) => props.theme.color.blueGray400};\r\n`;\r\n","import { ReactElement } from 'react';\r\nimport chevronLeft from '../../assets/icons/chevron-left.svg';\r\nimport chevronRight from '../../assets/icons/chevron-right.svg';\r\nimport { formatMonth, getNextOrPrevDate } from '../../utils';\r\nimport * as SC from './ReachDate.style';\r\n\r\ntype ReachDateProps = {\r\n  value: Date;\r\n  onMonthChange: (\r\n    isPreviousMonth: boolean,\r\n    event:\r\n      | React.MouseEvent<HTMLSpanElement, MouseEvent>\r\n      | React.KeyboardEvent<HTMLDivElement>\r\n  ) => void;\r\n};\r\n\r\nexport function ReachDate(props: ReachDateProps): ReactElement {\r\n  const isPreviousDisabled =\r\n    props.value.toString() === getNextOrPrevDate(new Date(), false).toString();\r\n\r\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n    switch (event.key) {\r\n      case 'ArrowLeft':\r\n        if (isPreviousDisabled) break;\r\n        props.onMonthChange(true, event);\r\n        break;\r\n      case 'ArrowRight':\r\n        props.onMonthChange(false, event);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SC.StyledReachDate\r\n      data-testid=\"reach-date\"\r\n      onKeyDown={(event) => handleKeyPress(event)}\r\n    >\r\n      <SC.Label>Reach goal by</SC.Label>\r\n      <SC.Wrapper tabIndex={0}>\r\n        <SC.Button\r\n          data-testid=\"button-prev\"\r\n          onClick={(event) =>\r\n            !isPreviousDisabled && props.onMonthChange(true, event)\r\n          }\r\n          data-disabled={isPreviousDisabled}\r\n        >\r\n          <SC.ButtonIcon\r\n            width={24}\r\n            height={24}\r\n            aria-hidden\r\n            src={chevronLeft}\r\n            alt=\"\"\r\n          />\r\n        </SC.Button>\r\n        <SC.DateWrapper\r\n          aria-atomic=\"true\"\r\n          aria-relevant=\"additions\"\r\n          aria-live=\"polite\"\r\n        >\r\n          <SC.Month>{formatMonth(props.value)}</SC.Month>\r\n          <SC.Year>{props.value.getFullYear()}</SC.Year>\r\n        </SC.DateWrapper>\r\n        <SC.Button\r\n          data-testid=\"button-next\"\r\n          onClick={(event) => {\r\n            props.onMonthChange(false, event);\r\n          }}\r\n        >\r\n          <SC.ButtonIcon\r\n            width={24}\r\n            height={24}\r\n            aria-hidden\r\n            src={chevronRight}\r\n            alt=\"\"\r\n          />\r\n        </SC.Button>\r\n      </SC.Wrapper>\r\n    </SC.StyledReachDate>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMonthlyAmount = styled.div`\r\n  border: 1px solid ${(props) => props.theme.color.blueGray50};\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const AmountInfo = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 24px;\r\n  word-break: break-word;\r\n\r\n  @media (min-width: 992px) {\r\n    padding: 24px 32px 16px 32px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 120%;\r\n  color: ${(props) => props.theme.color.blueGray900};\r\n\r\n  @media (min-width: 992px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const Amount = styled.h3`\r\n  font-family: ${(props) => props.theme.font.rubik};\r\n  font-weight: 500;\r\n  font-size: 32px;\r\n  line-height: 120%;\r\n  font-size: 24px;\r\n  color: ${(props) => props.theme.color.brandColorSecondary};\r\n\r\n  @media (min-width: 992px) {\r\n    font-size: 32px;\r\n  }\r\n`;\r\n\r\nexport const AmountDetail = styled.div`\r\n  background-color: ${(props) => props.theme.color.blueGray10};\r\n  padding: 24px 32px;\r\n`;\r\n\r\nexport const AmountDetailText = styled.p`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  color: ${(props) => props.theme.color.blueGray900};\r\n  text-align: center;\r\n  line-height: 133%;\r\n\r\n  @media (min-width: 992px) {\r\n    text-align: left;\r\n  }\r\n`;\r\n","import { ReactElement } from 'react';\r\nimport { formatCurrency, formatMonth } from '../../utils';\r\nimport * as SC from './MonthlyAmount.style';\r\n\r\ntype MonthlyAmountProps = {\r\n  date: Date;\r\n  amount: number;\r\n  monthCounter: number;\r\n  monthlyAmount: number;\r\n};\r\n\r\nexport function MonthlyAmount(props: MonthlyAmountProps): ReactElement {\r\n  return (\r\n    <SC.StyledMonthlyAmount>\r\n      <SC.AmountInfo>\r\n        <SC.Title>Monthly amount</SC.Title>\r\n        <SC.Amount data-testid=\"monthly-amount\">\r\n          ${formatCurrency(props.monthlyAmount)}\r\n        </SC.Amount>\r\n      </SC.AmountInfo>\r\n      <SC.AmountDetail>\r\n        <SC.AmountDetailText>\r\n          You&apos;re planning{' '}\r\n          <strong>{props.monthCounter} monthly deposits</strong> to reach your{' '}\r\n          <strong>${formatCurrency(props.amount)} goal</strong> by{' '}\r\n          <strong>\r\n            {formatMonth(props.date)} {props.date.getFullYear()}\r\n          </strong>\r\n          .\r\n        </SC.AmountDetailText>\r\n      </SC.AmountDetail>\r\n    </SC.StyledMonthlyAmount>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/buy-a-house.5642fcae.svg\";","import styled from 'styled-components';\r\n\r\nexport const ButtonStyle = styled.button`\r\n  font-family: Work Sans;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  line-height: 20px;\r\n  background-color: ${(props) => props.theme.color.brandColorPrimary};\r\n  color: ${(props) => props.theme.color.neutralWhite};\r\n  padding: 18px 0;\r\n  border-radius: 32px;\r\n  display: block;\r\n  width: 320px;\r\n  height: 56px;\r\n  border: 0;\r\n  transition: 0.2s background-color;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.color.brandColorSecondary};\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const CardStyle = styled.div`\r\n  background-color: ${(props) => props.theme.color.neutralWhite};\r\n  box-shadow: 0px 16px 32px rgba(30, 42, 50, 0.08);\r\n  border-radius: 8px;\r\n  display: block;\r\n  padding: 0 40px;\r\n  width: 100vw;\r\n\r\n  @media (min-width: 992px) {\r\n    width: 560px;\r\n  }\r\n`;\r\n","import { Button } from '../components/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { Card } from '../components/Card/Card';\r\n\r\nexport const Wrapper = styled.section`\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 120%;\r\n  color: ${(props) => props.theme.color.brandColorPrimary};\r\n  margin-bottom: 24px;\r\n\r\n  @media (min-width: 992px) {\r\n    font-weight: 400;\r\n    font-size: 20px;\r\n    line-height: 120%;\r\n  }\r\n`;\r\n\r\nexport const CardSimulator = styled(Card)`\r\n  padding: 24px 24px 40px 24px;\r\n\r\n  @media (min-width: 992px) {\r\n    padding: 32px 40px 40px 40px;\r\n  }\r\n`;\r\n\r\nexport const CardTitleWrapper = styled.div`\r\n  display: flex;\r\n  gap: 16px;\r\n  align-items: center;\r\n  margin-bottom: 16px;\r\n  @media (min-width: 992px) {\r\n    margin-bottom: 24px;\r\n  }\r\n`;\r\n\r\nexport const CardTitle = styled.h2`\r\n  font-family: ${(props) => props.theme.font.rubik};\r\n  font-size: 20px;\r\n  margin-bottom: 4px;\r\n  font-weight: 500;\r\n\r\n  @media (min-width: 992px) {\r\n    font-size: 24px;\r\n    line-height: 120%;\r\n    color: ${(props) => props.theme.color.blueGray900};\r\n  }\r\n`;\r\n\r\nexport const CardSubtitle = styled.p`\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 150%;\r\n  color: ${(props) => props.theme.color.blueGray400};\r\n\r\n  @media (min-width: 992px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: flex;\r\n  gap: 16px;\r\n  flex-direction: column;\r\n  margin-bottom: 24px;\r\n\r\n  @media (min-width: 992px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const FormButton = styled(Button)`\r\n  align-self: center;\r\n  margin-top: 32px;\r\n`;\r\n","import { ReactElement } from 'react';\r\nimport * as SC from './Card.style';\r\n\r\ntype CardProps = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\nexport function Card(props: CardProps): ReactElement {\r\n  return (\r\n    <SC.CardStyle className={props.className}>{props.children}</SC.CardStyle>\r\n  );\r\n}\r\n","import { ReactElement } from 'react';\r\nimport * as SC from './Button.style';\r\n\r\ntype ButtonProps = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\nexport function Button(props: ButtonProps): ReactElement {\r\n  return (\r\n    <SC.ButtonStyle className={props.className}>\r\n      {props.children}\r\n    </SC.ButtonStyle>\r\n  );\r\n}\r\n","import { ReactElement, useMemo, useState } from 'react';\nimport { Amount } from '../components/Amount/Amount';\nimport { ReachDate } from '../components/ReachDate/ReachDate';\nimport { MonthlyAmount } from '../components/MonthlyAmount/MonthlyAmount';\nimport buyAHouseIcon from '../assets/icons/buy-a-house.svg';\nimport * as SC from './SavingsGoalSimulator.style';\nimport { getNextOrPrevDate } from '../utils';\n\nexport function SavingsGoalSimulator(): ReactElement {\n  const [date, setDate] = useState(getNextOrPrevDate(new Date(), false));\n  const [monthCounter, setMonthCounter] = useState(1);\n  const [amount, setAmount] = useState(25000);\n\n  const onMonthChange = (isPreviousMonth: boolean) => {\n    setDate(getNextOrPrevDate(date, isPreviousMonth));\n    isPreviousMonth\n      ? setMonthCounter(monthCounter - 1)\n      : setMonthCounter(monthCounter + 1);\n  };\n\n  const onAmountChange = (amount: number) => {\n    setAmount(amount);\n  };\n\n  const calcMonthlyAmount = useMemo(() => {\n    const calc = amount / monthCounter;\n    return calc;\n  }, [amount, monthCounter]);\n\n  return (\n    <SC.Wrapper>\n      <SC.Title>\n        Let&apos;s plan your <strong>saving goal.</strong>\n      </SC.Title>\n      <SC.CardSimulator>\n        <SC.CardTitleWrapper>\n          <img width={64} height={64} src={buyAHouseIcon} alt=\"\" aria-hidden />\n          <span>\n            <SC.CardTitle>Buy a house</SC.CardTitle>\n            <SC.CardSubtitle>Saving goal</SC.CardSubtitle>\n          </span>\n        </SC.CardTitleWrapper>\n        <SC.Form name=\"savingsGoal\">\n          <SC.InputWrapper>\n            <Amount amount={amount} onAmountChange={onAmountChange} />\n            <ReachDate value={date} onMonthChange={onMonthChange} />\n          </SC.InputWrapper>\n          <MonthlyAmount\n            monthCounter={monthCounter}\n            monthlyAmount={calcMonthlyAmount}\n            date={date}\n            amount={amount}\n          ></MonthlyAmount>\n          <SC.FormButton>Confirm</SC.FormButton>\n        </SC.Form>\n      </SC.CardSimulator>\n    </SC.Wrapper>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  body {\r\n    font-family: ${(props) => props.theme.font.workSans};\r\n    background-color: ${(props) => props.theme.color.blueGray10};\r\n  }\r\n`;\r\n","import { DefaultTheme } from 'styled-components';\r\nimport * as Tokens from './shared/tokens';\r\n\r\nconst defaultTheme: DefaultTheme = {\r\n  color: {\r\n    ...Tokens.color,\r\n  },\r\n  font: { ...Tokens.fontFamily },\r\n};\r\n\r\nexport default defaultTheme;\r\n","export const color = {\r\n  neutralWhite: '#FFFFFF',\r\n  brandColorPrimary: '#1B31A8',\r\n  brandColorSecondary: '#0079FF',\r\n  blueGray900: '#1E2A32',\r\n  blueGray600: '#4D6475',\r\n  blueGray400: '#708797',\r\n  blueGray300: '#8A9CA9',\r\n  blueGray100: '#CBD5DC',\r\n  blueGray50: '#E9EEF2',\r\n  blueGray10: '#F4F8FA',\r\n};\r\n","export const fontFamily = {\r\n  workSans: '\"Work Sans\", sans-serif',\r\n  rubik: '\"Rubik\", sans-serif',\r\n};\r\n","import { ThemeProvider } from 'styled-components';\r\nimport { Menu } from './components/Menu/Menu';\r\nimport { SavingsGoalSimulator } from './pages/SavingsGoalSimulator';\r\nimport { GlobalStyle } from './styles';\r\nimport theme from './theme';\r\n\r\nexport function App(): JSX.Element {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <Menu />\r\n      <SavingsGoalSimulator />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}